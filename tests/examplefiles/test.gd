<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
   "http://www.w3.org/TR/html4/strict.dtd">
<!--
generated by Pygments <https://pygments.org/>
Copyright 2006-2025 by the Pygments team.
Licensed under the BSD license, see LICENSE for details.
-->
<html>
<head>
  <title></title>
  <meta http-equiv="content-type" content="text/html; charset=None">
  <style type="text/css">
/*
generated by Pygments <https://pygments.org/>
Copyright 2006-2025 by the Pygments team.
Licensed under the BSD license, see LICENSE for details.
*/
pre { line-height: 125%; }
td.linenos .normal { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }
span.linenos { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }
td.linenos .special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }
span.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }
body .hll { background-color: #ffffcc }
body { background: #1d2229; color: #CDCFD2 }
body .c { color: #76787E } /* Comment */
body .err { border: 1px solid #F00 } /* Error */
body .k { color: #FF7085 } /* Keyword */
body .l { color: #FF7085 } /* Literal */
body .o { color: #ABC9FF } /* Operator */
body .p { color: #ABC9FF } /* Punctuation */
body .ch { color: #76787E } /* Comment.Hashbang */
body .cm { color: #76787E } /* Comment.Multiline */
body .cp { color: #76787E } /* Comment.Preproc */
body .cpf { color: #76787E } /* Comment.PreprocFile */
body .c1 { color: #76787E } /* Comment.Single */
body .cs { color: #76787E } /* Comment.Special */
body .kc { color: #FF7085 } /* Keyword.Constant */
body .k-ControlFlow { color: #FF8CCC } /* Keyword.ControlFlow */
body .kd { color: #FF7085 } /* Keyword.Declaration */
body .kn { color: #FF7085 } /* Keyword.Namespace */
body .kp { color: #FF7085 } /* Keyword.Pseudo */
body .kr { color: #FF7085 } /* Keyword.Reserved */
body .kt { color: #FF7085 } /* Keyword.Type */
body .ld { color: #FF7085 } /* Literal.Date */
body .m { color: #A1FFE0 } /* Literal.Number */
body .s { color: #FFEDA1 } /* Literal.String */
body .nb { color: #8FFFDB } /* Name.Builtin */
body .nc { color: #C7FFED } /* Name.Class */
body .no { color: #BCE0FF } /* Name.Constant */
body .nd { color: #FFB373 } /* Name.Decorator */
body .nf { color: #57B3FF } /* Name.Function */
body .nv { color: #BCE0FF } /* Name.Variable */
body .ow { color: #FF7085 } /* Operator.Word */
body .pm { color: #ABC9FF } /* Punctuation.Marker */
body .w { color: #BBB } /* Text.Whitespace */
body .mb { color: #A1FFE0 } /* Literal.Number.Bin */
body .mf { color: #A1FFE0 } /* Literal.Number.Float */
body .mh { color: #A1FFE0 } /* Literal.Number.Hex */
body .mi { color: #A1FFE0 } /* Literal.Number.Integer */
body .mo { color: #A1FFE0 } /* Literal.Number.Oct */
body .sa { color: #FFEDA1 } /* Literal.String.Affix */
body .sb { color: #FFEDA1 } /* Literal.String.Backtick */
body .sc { color: #FFEDA1 } /* Literal.String.Char */
body .dl { color: #FFEDA1 } /* Literal.String.Delimiter */
body .sd { color: #FFEDA1 } /* Literal.String.Doc */
body .s2 { color: #FFEDA1 } /* Literal.String.Double */
body .se { color: #ABC9FF } /* Literal.String.Escape */
body .sh { color: #FFEDA1 } /* Literal.String.Heredoc */
body .si { color: #FFEDA1 } /* Literal.String.Interpol */
body .sx { color: #63C259 } /* Literal.String.Other */
body .sr { color: #FFEDA1 } /* Literal.String.Regex */
body .s1 { color: #FFEDA1 } /* Literal.String.Single */
body .ss { color: #FFEDA1 } /* Literal.String.Symbol */
body .nb-Function { color: #A3A3F5 } /* Name.Builtin.Function */
body .bp { color: #FF7085 } /* Name.Builtin.Pseudo */
body .nb-Type { color: #42FFC2 } /* Name.Builtin.Type */
body .fm { color: #57B3FF } /* Name.Function.Magic */
body .vc { color: #BCE0FF } /* Name.Variable.Class */
body .vg { color: #BCE0FF } /* Name.Variable.Global */
body .vi { color: #BCE0FF } /* Name.Variable.Instance */
body .vm { color: #BCE0FF } /* Name.Variable.Magic */
body .il { color: #A1FFE0 } /* Literal.Number.Integer.Long */

  </style>
</head>
<body>
<h2></h2>

<div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">  1</span>
<span class="normal">  2</span>
<span class="normal">  3</span>
<span class="normal">  4</span>
<span class="normal">  5</span>
<span class="normal">  6</span>
<span class="normal">  7</span>
<span class="normal">  8</span>
<span class="normal">  9</span>
<span class="normal"> 10</span>
<span class="normal"> 11</span>
<span class="normal"> 12</span>
<span class="normal"> 13</span>
<span class="normal"> 14</span>
<span class="normal"> 15</span>
<span class="normal"> 16</span>
<span class="normal"> 17</span>
<span class="normal"> 18</span>
<span class="normal"> 19</span>
<span class="normal"> 20</span>
<span class="normal"> 21</span>
<span class="normal"> 22</span>
<span class="normal"> 23</span>
<span class="normal"> 24</span>
<span class="normal"> 25</span>
<span class="normal"> 26</span>
<span class="normal"> 27</span>
<span class="normal"> 28</span>
<span class="normal"> 29</span>
<span class="normal"> 30</span>
<span class="normal"> 31</span>
<span class="normal"> 32</span>
<span class="normal"> 33</span>
<span class="normal"> 34</span>
<span class="normal"> 35</span>
<span class="normal"> 36</span>
<span class="normal"> 37</span>
<span class="normal"> 38</span>
<span class="normal"> 39</span>
<span class="normal"> 40</span>
<span class="normal"> 41</span>
<span class="normal"> 42</span>
<span class="normal"> 43</span>
<span class="normal"> 44</span>
<span class="normal"> 45</span>
<span class="normal"> 46</span>
<span class="normal"> 47</span>
<span class="normal"> 48</span>
<span class="normal"> 49</span>
<span class="normal"> 50</span>
<span class="normal"> 51</span>
<span class="normal"> 52</span>
<span class="normal"> 53</span>
<span class="normal"> 54</span>
<span class="normal"> 55</span>
<span class="normal"> 56</span>
<span class="normal"> 57</span>
<span class="normal"> 58</span>
<span class="normal"> 59</span>
<span class="normal"> 60</span>
<span class="normal"> 61</span>
<span class="normal"> 62</span>
<span class="normal"> 63</span>
<span class="normal"> 64</span>
<span class="normal"> 65</span>
<span class="normal"> 66</span>
<span class="normal"> 67</span>
<span class="normal"> 68</span>
<span class="normal"> 69</span>
<span class="normal"> 70</span>
<span class="normal"> 71</span>
<span class="normal"> 72</span>
<span class="normal"> 73</span>
<span class="normal"> 74</span>
<span class="normal"> 75</span>
<span class="normal"> 76</span>
<span class="normal"> 77</span>
<span class="normal"> 78</span>
<span class="normal"> 79</span>
<span class="normal"> 80</span>
<span class="normal"> 81</span>
<span class="normal"> 82</span>
<span class="normal"> 83</span>
<span class="normal"> 84</span>
<span class="normal"> 85</span>
<span class="normal"> 86</span>
<span class="normal"> 87</span>
<span class="normal"> 88</span>
<span class="normal"> 89</span>
<span class="normal"> 90</span>
<span class="normal"> 91</span>
<span class="normal"> 92</span>
<span class="normal"> 93</span>
<span class="normal"> 94</span>
<span class="normal"> 95</span>
<span class="normal"> 96</span>
<span class="normal"> 97</span>
<span class="normal"> 98</span>
<span class="normal"> 99</span>
<span class="normal">100</span>
<span class="normal">101</span>
<span class="normal">102</span>
<span class="normal">103</span>
<span class="normal">104</span>
<span class="normal">105</span>
<span class="normal">106</span>
<span class="normal">107</span>
<span class="normal">108</span>
<span class="normal">109</span>
<span class="normal">110</span>
<span class="normal">111</span>
<span class="normal">112</span>
<span class="normal">113</span>
<span class="normal">114</span>
<span class="normal">115</span>
<span class="normal">116</span>
<span class="normal">117</span>
<span class="normal">118</span>
<span class="normal">119</span>
<span class="normal">120</span>
<span class="normal">121</span>
<span class="normal">122</span>
<span class="normal">123</span>
<span class="normal">124</span>
<span class="normal">125</span>
<span class="normal">126</span>
<span class="normal">127</span>
<span class="normal">128</span>
<span class="normal">129</span>
<span class="normal">130</span>
<span class="normal">131</span>
<span class="normal">132</span>
<span class="normal">133</span>
<span class="normal">134</span>
<span class="normal">135</span>
<span class="normal">136</span>
<span class="normal">137</span>
<span class="normal">138</span>
<span class="normal">139</span>
<span class="normal">140</span>
<span class="normal">141</span>
<span class="normal">142</span>
<span class="normal">143</span>
<span class="normal">144</span>
<span class="normal">145</span>
<span class="normal">146</span>
<span class="normal">147</span>
<span class="normal">148</span>
<span class="normal">149</span>
<span class="normal">150</span>
<span class="normal">151</span>
<span class="normal">152</span>
<span class="normal">153</span>
<span class="normal">154</span>
<span class="normal">155</span>
<span class="normal">156</span>
<span class="normal">157</span>
<span class="normal">158</span>
<span class="normal">159</span>
<span class="normal">160</span>
<span class="normal">161</span>
<span class="normal">162</span>
<span class="normal">163</span>
<span class="normal">164</span>
<span class="normal">165</span>
<span class="normal">166</span>
<span class="normal">167</span>
<span class="normal">168</span>
<span class="normal">169</span>
<span class="normal">170</span>
<span class="normal">171</span>
<span class="normal">172</span>
<span class="normal">173</span>
<span class="normal">174</span>
<span class="normal">175</span>
<span class="normal">176</span>
<span class="normal">177</span>
<span class="normal">178</span>
<span class="normal">179</span>
<span class="normal">180</span>
<span class="normal">181</span>
<span class="normal">182</span>
<span class="normal">183</span>
<span class="normal">184</span>
<span class="normal">185</span>
<span class="normal">186</span>
<span class="normal">187</span>
<span class="normal">188</span>
<span class="normal">189</span>
<span class="normal">190</span>
<span class="normal">191</span>
<span class="normal">192</span>
<span class="normal">193</span>
<span class="normal">194</span>
<span class="normal">195</span>
<span class="normal">196</span>
<span class="normal">197</span>
<span class="normal">198</span>
<span class="normal">199</span>
<span class="normal">200</span>
<span class="normal">201</span>
<span class="normal">202</span>
<span class="normal">203</span>
<span class="normal">204</span>
<span class="normal">205</span>
<span class="normal">206</span>
<span class="normal">207</span>
<span class="normal">208</span>
<span class="normal">209</span>
<span class="normal">210</span>
<span class="normal">211</span>
<span class="normal">212</span>
<span class="normal">213</span>
<span class="normal">214</span>
<span class="normal">215</span>
<span class="normal">216</span>
<span class="normal">217</span>
<span class="normal">218</span>
<span class="normal">219</span>
<span class="normal">220</span>
<span class="normal">221</span>
<span class="normal">222</span>
<span class="normal">223</span>
<span class="normal">224</span>
<span class="normal">225</span>
<span class="normal">226</span>
<span class="normal">227</span>
<span class="normal">228</span>
<span class="normal">229</span>
<span class="normal">230</span>
<span class="normal">231</span>
<span class="normal">232</span>
<span class="normal">233</span>
<span class="normal">234</span>
<span class="normal">235</span>
<span class="normal">236</span>
<span class="normal">237</span>
<span class="normal">238</span>
<span class="normal">239</span>
<span class="normal">240</span>
<span class="normal">241</span>
<span class="normal">242</span>
<span class="normal">243</span>
<span class="normal">244</span>
<span class="normal">245</span>
<span class="normal">246</span>
<span class="normal">247</span>
<span class="normal">248</span>
<span class="normal">249</span>
<span class="normal">250</span>
<span class="normal">251</span>
<span class="normal">252</span>
<span class="normal">253</span>
<span class="normal">254</span>
<span class="normal">255</span>
<span class="normal">256</span>
<span class="normal">257</span>
<span class="normal">258</span>
<span class="normal">259</span>
<span class="normal">260</span>
<span class="normal">261</span>
<span class="normal">262</span>
<span class="normal">263</span>
<span class="normal">264</span>
<span class="normal">265</span>
<span class="normal">266</span>
<span class="normal">267</span>
<span class="normal">268</span>
<span class="normal">269</span>
<span class="normal">270</span>
<span class="normal">271</span>
<span class="normal">272</span>
<span class="normal">273</span>
<span class="normal">274</span>
<span class="normal">275</span>
<span class="normal">276</span>
<span class="normal">277</span>
<span class="normal">278</span>
<span class="normal">279</span>
<span class="normal">280</span>
<span class="normal">281</span>
<span class="normal">282</span>
<span class="normal">283</span>
<span class="normal">284</span>
<span class="normal">285</span>
<span class="normal">286</span>
<span class="normal">287</span>
<span class="normal">288</span>
<span class="normal">289</span>
<span class="normal">290</span>
<span class="normal">291</span>
<span class="normal">292</span>
<span class="normal">293</span>
<span class="normal">294</span>
<span class="normal">295</span>
<span class="normal">296</span>
<span class="normal">297</span>
<span class="normal">298</span>
<span class="normal">299</span>
<span class="normal">300</span>
<span class="normal">301</span>
<span class="normal">302</span>
<span class="normal">303</span>
<span class="normal">304</span>
<span class="normal">305</span>
<span class="normal">306</span>
<span class="normal">307</span>
<span class="normal">308</span>
<span class="normal">309</span>
<span class="normal">310</span>
<span class="normal">311</span>
<span class="normal">312</span>
<span class="normal">313</span>
<span class="normal">314</span>
<span class="normal">315</span>
<span class="normal">316</span>
<span class="normal">317</span>
<span class="normal">318</span>
<span class="normal">319</span>
<span class="normal">320</span>
<span class="normal">321</span>
<span class="normal">322</span>
<span class="normal">323</span>
<span class="normal">324</span>
<span class="normal">325</span>
<span class="normal">326</span>
<span class="normal">327</span>
<span class="normal">328</span>
<span class="normal">329</span>
<span class="normal">330</span>
<span class="normal">331</span>
<span class="normal">332</span>
<span class="normal">333</span>
<span class="normal">334</span>
<span class="normal">335</span>
<span class="normal">336</span>
<span class="normal">337</span>
<span class="normal">338</span>
<span class="normal">339</span>
<span class="normal">340</span>
<span class="normal">341</span>
<span class="normal">342</span>
<span class="normal">343</span>
<span class="normal">344</span>
<span class="normal">345</span>
<span class="normal">346</span>
<span class="normal">347</span>
<span class="normal">348</span>
<span class="normal">349</span>
<span class="normal">350</span>
<span class="normal">351</span>
<span class="normal">352</span>
<span class="normal">353</span>
<span class="normal">354</span>
<span class="normal">355</span>
<span class="normal">356</span>
<span class="normal">357</span>
<span class="normal">358</span>
<span class="normal">359</span>
<span class="normal">360</span>
<span class="normal">361</span>
<span class="normal">362</span>
<span class="normal">363</span>
<span class="normal">364</span>
<span class="normal">365</span>
<span class="normal">366</span>
<span class="normal">367</span>
<span class="normal">368</span>
<span class="normal">369</span>
<span class="normal">370</span>
<span class="normal">371</span>
<span class="normal">372</span>
<span class="normal">373</span>
<span class="normal">374</span>
<span class="normal">375</span>
<span class="normal">376</span>
<span class="normal">377</span>
<span class="normal">378</span>
<span class="normal">379</span>
<span class="normal">380</span>
<span class="normal">381</span>
<span class="normal">382</span>
<span class="normal">383</span>
<span class="normal">384</span>
<span class="normal">385</span>
<span class="normal">386</span>
<span class="normal">387</span>
<span class="normal">388</span>
<span class="normal">389</span>
<span class="normal">390</span>
<span class="normal">391</span>
<span class="normal">392</span>
<span class="normal">393</span>
<span class="normal">394</span>
<span class="normal">395</span>
<span class="normal">396</span>
<span class="normal">397</span>
<span class="normal">398</span>
<span class="normal">399</span>
<span class="normal">400</span>
<span class="normal">401</span>
<span class="normal">402</span>
<span class="normal">403</span></pre></div></td><td class="code"><div><pre><span></span><span class="k">extends</span><span class="w"> </span><span class="nb">SceneTree</span>

<span class="k">const</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;ModLoader:Setup&quot;</span>

<span class="k">const</span><span class="w"> </span><span class="n">settings</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="p">{</span>
<span class="w">	</span><span class="s2">&quot;IS_LOADER_SETUP_APPLIED&quot;</span><span class="p">:</span><span class="w"> </span><span class="s2">&quot;application/run/is_loader_setup_applied&quot;</span><span class="p">,</span>
<span class="w">	</span><span class="s2">&quot;IS_LOADER_SET_UP&quot;</span><span class="p">:</span><span class="w"> </span><span class="s2">&quot;application/run/is_loader_set_up&quot;</span><span class="p">,</span>
<span class="w">	</span><span class="s2">&quot;MOD_LOADER_AUTOLOAD&quot;</span><span class="p">:</span><span class="w"> </span><span class="s2">&quot;autoload/ModLoader&quot;</span><span class="p">,</span>
<span class="p">}</span>

<span class="c1"># IMPORTANT: use the ModLoaderLog via this variable within this script!</span>
<span class="c1"># Otherwise, script compilation will break on first load since the class is not defined.</span>
<span class="k">var</span><span class="w"> </span><span class="nc">ModLoaderSetupLog</span><span class="p">:</span><span class="w"> </span><span class="nb nb-Type">Object</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb nb-Function">load</span><span class="p">(</span><span class="s2">&quot;res://addons/mod_loader/setup/setup_log.gd&quot;</span><span class="p">)</span>
<span class="k">var</span><span class="w"> </span><span class="nc">ModLoaderSetupUtils</span><span class="p">:</span><span class="w"> </span><span class="nb nb-Type">Object</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb nb-Function">load</span><span class="p">(</span><span class="s2">&quot;res://addons/mod_loader/setup/setup_utils.gd&quot;</span><span class="p">)</span>

<span class="k">var</span><span class="w"> </span><span class="n">path</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="p">{}</span>
<span class="k">var</span><span class="w"> </span><span class="n">file_name</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="p">{}</span>
<span class="k">var</span><span class="w"> </span><span class="n">is_only_setup</span><span class="p">:</span><span class="w"> </span><span class="nb nb-Type">bool</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nc">ModLoaderSetupUtils</span><span class="o">.</span><span class="nf">is_running_with_command_line_arg</span><span class="p">(</span><span class="s2">&quot;--only-setup&quot;</span><span class="p">)</span>
<span class="k">var</span><span class="w"> </span><span class="n">is_setup_create_override_cfg</span><span class="p">:</span><span class="w"> </span><span class="nb nb-Type">bool</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nc">ModLoaderSetupUtils</span><span class="o">.</span><span class="nf">is_running_with_command_line_arg</span><span class="p">(</span>
<span class="w">	</span><span class="s2">&quot;--setup-create-override-cfg&quot;</span>
<span class="p">)</span>


<span class="k">func</span><span class="w"> </span><span class="nf">_init</span><span class="p">()</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb nb-Type">void</span><span class="p">:</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">hello</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="p">{}</span>

<span class="w">	</span><span class="c1">#hello world</span>
<span class="w">	</span><span class="n">hello</span><span class="o">.</span><span class="vi">world</span><span class="o">.</span><span class="vi">test</span>
<span class="w">	</span><span class="n">hello</span><span class="o">.</span><span class="vi">world</span><span class="o">.</span><span class="vi">test</span><span class="o">.</span><span class="nf">keys</span><span class="p">()</span>
<span class="w">	</span><span class="n">hello</span><span class="o">.</span><span class="nf">keys</span><span class="p">()</span><span class="o">.</span><span class="nf">front</span><span class="p">()</span><span class="o">.</span><span class="vi">something</span>
<span class="w">	</span><span class="n">hello</span><span class="o">.</span><span class="nf">keys</span><span class="p">()</span>
<span class="w">	</span><span class="c1">#hello world</span>
<span class="w">	</span><span class="n">hello</span><span class="o">.</span><span class="vi">world</span>
<span class="w">	</span><span class="n">hello</span><span class="o">.</span><span class="vi">w2orld</span>
<span class="w">	</span><span class="n">hello</span><span class="o">.</span><span class="nf">w2orld</span><span class="p">()</span>

<span class="w">	</span><span class="sx">$Player/Sprite</span>
<span class="w">	</span><span class="sx">$Player/Sprite2D</span>
<span class="w">	</span><span class="sx">%Sprite2D/Pivot</span>
<span class="w">	</span><span class="sx">$enemy/sprite</span>
<span class="w">	</span><span class="sx">$&quot;Player/Sprite&quot;</span>
<span class="w">	</span><span class="sx">%&quot;Sprite&quot;</span>
<span class="w">	</span><span class="sx">$&#39;Player/Sprite&#39;</span>
<span class="w">	</span><span class="sx">%&#39;Sprite2D&#39;</span>

<span class="w">	</span><span class="k">await</span><span class="w"> </span><span class="sx">$Button</span><span class="o">.</span><span class="vi">button_up</span>

<span class="w">	</span><span class="mf">1.5</span>
<span class="w">	</span><span class="mi">2000</span>
<span class="w">	</span><span class="mi">300_000_3</span>
<span class="w">	</span><span class="o">-</span><span class="mi">300_000_3</span>
<span class="w">	</span><span class="o">-</span><span class="mf">100.3</span>
<span class="w">	</span><span class="mf">10_0.3</span>
<span class="w">	</span><span class="mf">0.12121212</span>
<span class="w">	</span><span class="mf">0.12_121212</span>
<span class="w">	</span><span class="mh">0x12_12</span>
<span class="w">	</span><span class="mf">1.3e6</span>
<span class="w">	</span><span class="mf">1.3e6_2</span>
<span class="w">	</span><span class="mf">1.3e-6</span>
<span class="w">	</span><span class="mh">0xA1Fe316</span>
<span class="w">	</span><span class="o">-</span><span class="mh">0xA1Fe316</span>
<span class="w">	</span><span class="mb">0b010_1010</span>
<span class="w">	</span><span class="o">-</span><span class="mb">0b010_1010</span>
<span class="w">	</span><span class="l">PI</span>
<span class="w">	</span><span class="l">TAU</span>

<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span><span class="s2">&quot;ModLoader setup initialized&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>

<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">mod_loader_index</span><span class="p">:</span><span class="w"> </span><span class="nb nb-Type">int</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nc">ModLoaderSetupUtils</span><span class="o">.</span><span class="nf">get_autoload_index</span><span class="p">(</span><span class="s2">&quot;ModLoader&quot;</span><span class="p">)</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">mod_loader_store_index</span><span class="p">:</span><span class="w"> </span><span class="nb nb-Type">int</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nc">ModLoaderSetupUtils</span><span class="o">.</span><span class="nf">get_autoload_index</span><span class="p">(</span><span class="s2">&quot;ModLoaderStore&quot;</span><span class="p">)</span>

<span class="w">	</span><span class="c1"># Avoid doubling the setup work</span>
<span class="w">	</span><span class="c1"># Checks if the ModLoaderStore is the first autoload and ModLoader the second</span>
<span class="w">	</span><span class="k k-ControlFlow">if</span><span class="w"> </span><span class="n">mod_loader_store_index</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="ow">and</span><span class="w"> </span><span class="n">mod_loader_index</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">1</span><span class="p">:</span>
<span class="w">		</span><span class="nf">modded_start</span><span class="p">()</span>
<span class="w">		</span><span class="k k-ControlFlow">return</span>

<span class="w">	</span><span class="c1"># Check if --setup-create-override-cfg is passed,</span>
<span class="w">	</span><span class="c1"># in that case the ModLoader and ModLoaderStore just have to be somewhere in the autoloads.</span>
<span class="w">	</span><span class="k k-ControlFlow">if</span><span class="w"> </span><span class="n">is_setup_create_override_cfg</span><span class="w"> </span><span class="ow">and</span><span class="w"> </span><span class="n">mod_loader_index</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="o">-</span><span class="mi">1</span><span class="w"> </span><span class="ow">and</span><span class="w"> </span><span class="n">mod_loader_store_index</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="o">-</span><span class="mi">1</span><span class="p">:</span>
<span class="w">		</span><span class="nf">modded_start</span><span class="p">()</span>
<span class="w">		</span><span class="k k-ControlFlow">return</span>

<span class="w">	</span><span class="nf">setup_modloader</span><span class="p">()</span>


<span class="c1"># ModLoader already setup - switch to the main scene</span>
<span class="k">func</span><span class="w"> </span><span class="nf">modded_start</span><span class="p">()</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb nb-Type">void</span><span class="p">:</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">info</span><span class="p">(</span><span class="s2">&quot;ModLoader is available, mods can be loaded!&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>

<span class="w">	</span><span class="n">root</span><span class="o">.</span><span class="nf">set_title</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">%s</span><span class="s2"> (Modded)&quot;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">get_setting</span><span class="p">(</span><span class="s2">&quot;application/config/name&quot;</span><span class="p">))</span>

<span class="w">	</span><span class="n">change_scene_to_file</span><span class="o">.</span><span class="nf">call_deferred</span><span class="p">(</span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">get_setting</span><span class="p">(</span><span class="s2">&quot;application/run/main_scene&quot;</span><span class="p">))</span>


<span class="c1"># Set up the ModLoader as an autoload and register the other global classes.</span>
<span class="k">func</span><span class="w"> </span><span class="nf">setup_modloader</span><span class="p">()</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb nb-Type">void</span><span class="p">:</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">info</span><span class="p">(</span><span class="s2">&quot;Setting up ModLoader&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>

<span class="w">	</span><span class="c1"># Setup path and file_name dict with all required paths and file names.</span>
<span class="w">	</span><span class="nf">setup_file_data</span><span class="p">()</span>

<span class="w">	</span><span class="c1"># Add ModLoader autoload (the * marks the path as autoload)</span>
<span class="w">	</span><span class="nf">reorder_autoloads</span><span class="p">()</span>
<span class="w">	</span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">set_setting</span><span class="p">(</span><span class="n">settings</span><span class="o">.</span><span class="vi">IS_LOADER_SET_UP</span><span class="p">,</span><span class="w"> </span><span class="l">true</span><span class="p">)</span>

<span class="w">	</span><span class="c1"># The game needs to be restarted first, before the loader is truly set up</span>
<span class="w">	</span><span class="c1"># Set this here and check it elsewhere to prompt the user for a restart</span>
<span class="w">	</span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">set_setting</span><span class="p">(</span><span class="n">settings</span><span class="o">.</span><span class="vi">IS_LOADER_SETUP_APPLIED</span><span class="p">,</span><span class="w"> </span><span class="l">false</span><span class="p">)</span>

<span class="w">	</span><span class="k k-ControlFlow">if</span><span class="w"> </span><span class="n">is_setup_create_override_cfg</span><span class="p">:</span>
<span class="w">		</span><span class="nf">handle_override_cfg</span><span class="p">()</span>
<span class="w">	</span><span class="k k-ControlFlow">else</span><span class="p">:</span>
<span class="w">		</span><span class="nf">handle_injection</span><span class="p">()</span>

<span class="w">	</span><span class="c1"># ModLoader is set up. A game restart is required to apply the ProjectSettings.</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">info</span><span class="p">(</span><span class="s2">&quot;ModLoader is set up, a game restart is required.&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>

<span class="w">	</span><span class="k k-ControlFlow">match</span><span class="w"> </span><span class="l">true</span><span class="p">:</span>
<span class="w">		</span><span class="c1"># If the --only-setup cli argument is passed, quit with exit code 0</span>
<span class="w">		</span><span class="n">is_only_setup</span><span class="p">:</span>
<span class="w">			</span><span class="nf">quit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="w">		</span><span class="c1"># If no cli argument is passed, show message with OS.alert() and user has to restart the game</span>
<span class="w">		</span><span class="n">_</span><span class="p">:</span>
<span class="w">			</span><span class="nb">OS</span><span class="o">.</span><span class="nf">alert</span><span class="p">(</span>
<span class="w">				</span><span class="s2">&quot;The Godot ModLoader has been set up. The game needs to be restarted to apply the changes. Confirm to restart.&quot;</span>
<span class="w">			</span><span class="p">)</span>
<span class="w">			</span><span class="nf">restart</span><span class="p">()</span>


<span class="c1"># Reorders the autoloads in the project settings, to get the ModLoader on top.</span>
<span class="k">func</span><span class="w"> </span><span class="nf">reorder_autoloads</span><span class="p">()</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb nb-Type">void</span><span class="p">:</span>
<span class="w">	</span><span class="c1"># remove and re-add autoloads</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">original_autoloads</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="p">{}</span>
<span class="w">	</span><span class="k k-ControlFlow">for</span><span class="w"> </span><span class="n">prop</span><span class="w"> </span><span class="ow">in</span><span class="w"> </span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">get_property_list</span><span class="p">():</span>
<span class="w">		</span><span class="k">var</span><span class="w"> </span><span class="n">name</span><span class="p">:</span><span class="w"> </span><span class="nb nb-Type">String</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">prop</span><span class="o">.</span><span class="vi">name</span>
<span class="w">		</span><span class="k k-ControlFlow">if</span><span class="w"> </span><span class="n">name</span><span class="o">.</span><span class="nf">begins_with</span><span class="p">(</span><span class="s2">&quot;autoload/&quot;</span><span class="p">):</span>
<span class="w">			</span><span class="k">var</span><span class="w"> </span><span class="n">value</span><span class="p">:</span><span class="w"> </span><span class="nb nb-Type">String</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">get_setting</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
<span class="w">			</span><span class="n">original_autoloads</span><span class="p">[</span><span class="n">name</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">value</span>

<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">info</span><span class="p">(</span>
<span class="w">		</span><span class="s2">&quot;Start reorder autoloads current state: </span><span class="si">%s</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="nb">JSON</span><span class="o">.</span><span class="nf">stringify</span><span class="p">(</span><span class="n">original_autoloads</span><span class="p">,</span><span class="w"> </span><span class="s2">&quot;</span><span class="se">\t</span><span class="s2">&quot;</span><span class="p">)</span>
<span class="w">	</span><span class="p">)</span>

<span class="w">	</span><span class="k k-ControlFlow">for</span><span class="w"> </span><span class="n">autoload</span><span class="w"> </span><span class="ow">in</span><span class="w"> </span><span class="n">original_autoloads</span><span class="o">.</span><span class="nf">keys</span><span class="p">():</span>
<span class="w">		</span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">set_setting</span><span class="p">(</span><span class="n">autoload</span><span class="p">,</span><span class="w"> </span><span class="n">null</span><span class="p">)</span>

<span class="w">	</span><span class="c1"># Add ModLoaderStore autoload (the * marks the path as autoload)</span>
<span class="w">	</span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">set_setting</span><span class="p">(</span>
<span class="w">		</span><span class="s2">&quot;autoload/ModLoaderStore&quot;</span><span class="p">,</span><span class="w"> </span><span class="s2">&quot;*&quot;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s2">&quot;res://addons/mod_loader/mod_loader_store.gd&quot;</span>
<span class="w">	</span><span class="p">)</span>

<span class="w">	</span><span class="c1"># Add ModLoader autoload (the * marks the path as autoload)</span>
<span class="w">	</span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">set_setting</span><span class="p">(</span><span class="s2">&quot;autoload/ModLoader&quot;</span><span class="p">,</span><span class="w"> </span><span class="s2">&quot;*&quot;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s2">&quot;res://addons/mod_loader/mod_loader.gd&quot;</span><span class="p">)</span>

<span class="w">	</span><span class="c1"># add all previous autoloads back again</span>
<span class="w">	</span><span class="k k-ControlFlow">for</span><span class="w"> </span><span class="n">autoload</span><span class="w"> </span><span class="ow">in</span><span class="w"> </span><span class="n">original_autoloads</span><span class="o">.</span><span class="nf">keys</span><span class="p">():</span>
<span class="w">		</span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">set_setting</span><span class="p">(</span><span class="n">autoload</span><span class="p">,</span><span class="w"> </span><span class="n">original_autoloads</span><span class="p">[</span><span class="n">autoload</span><span class="p">])</span>

<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">new_autoloads</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="p">{}</span>
<span class="w">	</span><span class="k k-ControlFlow">for</span><span class="w"> </span><span class="n">prop</span><span class="w"> </span><span class="ow">in</span><span class="w"> </span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">get_property_list</span><span class="p">():</span>
<span class="w">		</span><span class="k">var</span><span class="w"> </span><span class="n">name</span><span class="p">:</span><span class="w"> </span><span class="nb nb-Type">String</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">prop</span><span class="o">.</span><span class="vi">name</span>
<span class="w">		</span><span class="k k-ControlFlow">if</span><span class="w"> </span><span class="n">name</span><span class="o">.</span><span class="nf">begins_with</span><span class="p">(</span><span class="s2">&quot;autoload/&quot;</span><span class="p">):</span>
<span class="w">			</span><span class="k">var</span><span class="w"> </span><span class="n">value</span><span class="p">:</span><span class="w"> </span><span class="nb nb-Type">String</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">get_setting</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
<span class="w">			</span><span class="n">new_autoloads</span><span class="p">[</span><span class="n">name</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">value</span>

<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">info</span><span class="p">(</span>
<span class="w">		</span><span class="s2">&quot;Reorder autoloads completed - new state: </span><span class="si">%s</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="nb">JSON</span><span class="o">.</span><span class="nf">stringify</span><span class="p">(</span><span class="n">new_autoloads</span><span class="p">,</span><span class="w"> </span><span class="s2">&quot;</span><span class="se">\t</span><span class="s2">&quot;</span><span class="p">)</span>
<span class="w">	</span><span class="p">)</span>


<span class="c1"># Saves the ProjectSettings to a override.cfg file in the base game directory.</span>
<span class="k">func</span><span class="w"> </span><span class="nf">handle_override_cfg</span><span class="p">()</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb nb-Type">void</span><span class="p">:</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span><span class="s2">&quot;using the override.cfg file&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>

<span class="w">	</span><span class="c1"># Make the &#39;.godot&#39; dir public as &#39;godot&#39; and copy all files to the public dir.</span>
<span class="w">	</span><span class="nf">make_project_data_public</span><span class="p">()</span>

<span class="w">	</span><span class="c1"># Combine mod_loader and game global classes</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">global_script_class_cache_combined</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="nf">get_combined_global_script_class_cache</span><span class="p">()</span>
<span class="w">	</span><span class="n">global_script_class_cache_combined</span><span class="o">.</span><span class="nf">save</span><span class="p">(</span><span class="s2">&quot;res://godot/global_script_class_cache.cfg&quot;</span><span class="p">)</span>

<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">_save_custom_error</span><span class="p">:</span><span class="w"> </span><span class="nb nb-Type">int</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">save_custom</span><span class="p">(</span>
<span class="w">		</span><span class="nc">ModLoaderSetupUtils</span><span class="o">.</span><span class="nf">get_override_path</span><span class="p">()</span>
<span class="w">	</span><span class="p">)</span>


<span class="c1"># Creates the project.binary file, adds it to the pck and removes the no longer needed project.binary file.</span>
<span class="k">func</span><span class="w"> </span><span class="nf">handle_injection</span><span class="p">()</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb nb-Type">void</span><span class="p">:</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span><span class="s2">&quot;Start injection&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="c1"># Create temp dir</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span><span class="s1">&#39;Creating temp dir at &quot;</span><span class="si">%s</span><span class="s1">&quot;&#39;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">path</span><span class="o">.</span><span class="vi">temp_dir_path</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="nb">DirAccess</span><span class="o">.</span><span class="nf">make_dir_recursive_absolute</span><span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="vi">temp_dir_path</span><span class="p">)</span>

<span class="w">	</span><span class="c1"># Create project.binary</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span>
<span class="w">		</span><span class="s1">&#39;Storing project.binary at &quot;</span><span class="si">%s</span><span class="s1">&quot;&#39;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">path</span><span class="o">.</span><span class="vi">temp_project_binary_path</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span>
<span class="w">	</span><span class="p">)</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">_error_save_custom_project_binary</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">save_custom</span><span class="p">(</span>
<span class="w">		</span><span class="n">path</span><span class="o">.</span><span class="vi">temp_project_binary_path</span>
<span class="w">	</span><span class="p">)</span>
<span class="w">	</span><span class="c1"># Create combined global class cache cfg</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">combined_global_script_class_cache_file</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="nf">get_combined_global_script_class_cache</span><span class="p">()</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span>
<span class="w">		</span><span class="s1">&#39;Storing global_script_class_cache at &quot;</span><span class="si">%s</span><span class="s1">&quot;&#39;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">path</span><span class="o">.</span><span class="vi">temp_global_script_class_cache_path</span><span class="p">,</span>
<span class="w">		</span><span class="n">LOG_NAME</span>
<span class="w">	</span><span class="p">)</span>
<span class="w">	</span><span class="c1"># Create the .godot dir inside the temp dir</span>
<span class="w">	</span><span class="nb">DirAccess</span><span class="o">.</span><span class="nf">make_dir_recursive_absolute</span><span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="vi">temp_dir_path</span><span class="o">.</span><span class="nf">path_join</span><span class="p">(</span><span class="s2">&quot;.godot&quot;</span><span class="p">))</span>
<span class="w">	</span><span class="c1"># Save the global class cache config file</span>
<span class="w">	</span><span class="n">combined_global_script_class_cache_file</span><span class="o">.</span><span class="nf">save</span><span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="vi">temp_global_script_class_cache_path</span><span class="p">)</span>
<span class="w">	</span><span class="nf">get_pck_version</span><span class="p">()</span>
<span class="w">	</span><span class="c1"># Check if .pck is embedded split it from the .exe</span>
<span class="w">	</span><span class="k k-ControlFlow">if</span><span class="w"> </span><span class="ow">not</span><span class="w"> </span><span class="nb">FileAccess</span><span class="o">.</span><span class="nf">file_exists</span><span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="vi">pck</span><span class="p">):</span>
<span class="w">		</span><span class="nf">split_pck</span><span class="p">()</span>

<span class="w">	</span><span class="nf">inject</span><span class="p">()</span>

<span class="w">	</span><span class="c1"># Rename vanilla</span>
<span class="w">	</span><span class="nb">DirAccess</span><span class="o">.</span><span class="nf">rename_absolute</span><span class="p">(</span>
<span class="w">		</span><span class="n">path</span><span class="o">.</span><span class="vi">pck</span><span class="p">,</span>
<span class="w">		</span><span class="n">path</span><span class="o">.</span><span class="vi">pck</span><span class="o">.</span><span class="nf">trim_suffix</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">%s</span><span class="s2">.pck&quot;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">file_name</span><span class="o">.</span><span class="vi">pck</span><span class="p">)</span><span class="o">.</span><span class="nf">path_join</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">%s</span><span class="s2">-vanilla.pck&quot;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">file_name</span><span class="o">.</span><span class="vi">pck</span><span class="p">)</span>
<span class="w">	</span><span class="p">)</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span>
<span class="w">		</span><span class="p">(</span>
<span class="w">			</span><span class="s1">&#39;Renamed &quot;</span><span class="si">%s</span><span class="s1">&quot; to &quot;</span><span class="si">%s</span><span class="s1">&quot;&#39;</span>
<span class="w">			</span><span class="o">%</span><span class="w"> </span><span class="p">[</span>
<span class="w">				</span><span class="n">path</span><span class="o">.</span><span class="vi">pck</span><span class="p">,</span>
<span class="w">				</span><span class="n">path</span><span class="o">.</span><span class="vi">pck</span><span class="o">.</span><span class="nf">trim_suffix</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">%s</span><span class="s2">.pck&quot;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">file_name</span><span class="o">.</span><span class="vi">pck</span><span class="p">)</span><span class="o">.</span><span class="nf">path_join</span><span class="p">(</span>
<span class="w">					</span><span class="s2">&quot;</span><span class="si">%s</span><span class="s2">-vanilla.pck&quot;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">file_name</span><span class="o">.</span><span class="vi">pck</span>
<span class="w">				</span><span class="p">)</span>
<span class="w">			</span><span class="p">]</span>
<span class="w">		</span><span class="p">),</span>
<span class="w">		</span><span class="n">LOG_NAME</span>
<span class="w">	</span><span class="p">)</span>
<span class="w">	</span><span class="c1"># Rename modded</span>
<span class="w">	</span><span class="nb">DirAccess</span><span class="o">.</span><span class="nf">rename_absolute</span><span class="p">(</span>
<span class="w">		</span><span class="n">path</span><span class="o">.</span><span class="vi">game_base_dir</span><span class="o">.</span><span class="nf">path_join</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">%s</span><span class="s2">-modded.pck&quot;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">file_name</span><span class="o">.</span><span class="vi">pck</span><span class="p">),</span>
<span class="w">		</span><span class="s2">&quot;</span><span class="si">%s</span><span class="s2">.pck&quot;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">path</span><span class="o">.</span><span class="vi">game_base_dir</span><span class="o">.</span><span class="nf">path_join</span><span class="p">(</span><span class="n">file_name</span><span class="o">.</span><span class="vi">pck</span><span class="p">)</span>
<span class="w">	</span><span class="p">)</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span>
<span class="w">		</span><span class="p">(</span>
<span class="w">			</span><span class="s1">&#39;Renamed &quot;</span><span class="si">%s</span><span class="s1">&quot; to &quot;</span><span class="si">%s</span><span class="s1">&quot;&#39;</span>
<span class="w">			</span><span class="o">%</span><span class="w"> </span><span class="p">[</span>
<span class="w">				</span><span class="n">path</span><span class="o">.</span><span class="vi">game_base_dir</span><span class="o">.</span><span class="nf">path_join</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">%s</span><span class="s2">-modded.pck&quot;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">file_name</span><span class="o">.</span><span class="vi">pck</span><span class="p">),</span>
<span class="w">				</span><span class="s2">&quot;</span><span class="si">%s</span><span class="s2">.pck&quot;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">path</span><span class="o">.</span><span class="vi">game_base_dir</span><span class="o">.</span><span class="nf">path_join</span><span class="p">(</span><span class="n">file_name</span><span class="o">.</span><span class="vi">pck</span><span class="p">)</span>
<span class="w">			</span><span class="p">]</span>
<span class="w">		</span><span class="p">),</span>
<span class="w">		</span><span class="n">LOG_NAME</span>
<span class="w">	</span><span class="p">)</span>

<span class="w">	</span><span class="nf">clean_up</span><span class="p">()</span>


<span class="k">func</span><span class="w"> </span><span class="nf">get_pck_version</span><span class="p">()</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb nb-Type">String</span><span class="p">:</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">engine_version_info</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="nb">Engine</span><span class="o">.</span><span class="nf">get_version_info</span><span class="p">()</span>
<span class="w">	</span><span class="c1"># Godot 4 pck version always starts with a 2 (at least for now).</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">pck_version</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="p">(</span>
<span class="w">		</span><span class="s2">&quot;2.</span><span class="si">%s</span><span class="s2">.</span><span class="si">%s</span><span class="s2">.</span><span class="si">%s</span><span class="s2">&quot;</span>
<span class="w">		</span><span class="o">%</span><span class="w"> </span><span class="p">[</span><span class="n">engine_version_info</span><span class="o">.</span><span class="vi">major</span><span class="p">,</span><span class="w"> </span><span class="n">engine_version_info</span><span class="o">.</span><span class="vi">minor</span><span class="p">,</span><span class="w"> </span><span class="n">engine_version_info</span><span class="o">.</span><span class="vi">patch</span><span class="p">]</span>
<span class="w">	</span><span class="p">)</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span><span class="s2">&quot;The pck version is: </span><span class="si">%s</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">pck_version</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="k k-ControlFlow">return</span><span class="w"> </span><span class="n">pck_version</span>


<span class="c1"># Add modified binary to the pck</span>
<span class="k">func</span><span class="w"> </span><span class="nf">inject</span><span class="p">(</span><span class="n">pck_version</span><span class="p">:</span><span class="w"> </span><span class="nb nb-Type">String</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">get_pck_version</span><span class="p">())</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb nb-Type">void</span><span class="p">:</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">arguments</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="p">[</span>
<span class="w">		</span><span class="s2">&quot;-pc&quot;</span><span class="p">,</span>
<span class="w">		</span><span class="n">path</span><span class="o">.</span><span class="vi">pck</span><span class="p">,</span>
<span class="w">		</span><span class="n">path</span><span class="o">.</span><span class="vi">temp_dir_path</span><span class="p">,</span>
<span class="w">		</span><span class="n">path</span><span class="o">.</span><span class="vi">game_base_dir</span><span class="o">.</span><span class="nf">path_join</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">%s</span><span class="s2">-modded.pck&quot;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">file_name</span><span class="o">.</span><span class="vi">pck</span><span class="p">),</span>
<span class="w">		</span><span class="n">pck_version</span>
<span class="w">	</span><span class="p">]</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span>
<span class="w">		</span><span class="s2">&quot;Injecting temp dir content into .pck: </span><span class="si">%s</span><span class="s2"> </span><span class="si">%s</span><span class="s2">&quot;</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="n">path</span><span class="o">.</span><span class="vi">pck_explorer</span><span class="p">,</span><span class="w"> </span><span class="n">arguments</span><span class="p">],</span><span class="w"> </span><span class="n">LOG_NAME</span>
<span class="w">	</span><span class="p">)</span>
<span class="w">	</span><span class="c1"># For unknown reasons the output only displays a single &quot;[&quot; - so only the executed arguments are logged.</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">_exit_code_inject</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="nb">OS</span><span class="o">.</span><span class="nf">execute</span><span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="vi">pck_explorer</span><span class="p">,</span><span class="w"> </span><span class="n">arguments</span><span class="p">)</span>


<span class="k">func</span><span class="w"> </span><span class="nf">split_pck</span><span class="p">()</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb nb-Type">void</span><span class="p">:</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">arguments</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="p">[</span><span class="s2">&quot;-s&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">path</span><span class="o">.</span><span class="vi">exe</span><span class="p">]</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span>
<span class="w">		</span><span class="s2">&quot;Splitting .pck from .exe: </span><span class="si">%s</span><span class="s2"> </span><span class="si">%s</span><span class="s2">&quot;</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="n">path</span><span class="o">.</span><span class="vi">pck_explorer</span><span class="p">,</span><span class="w"> </span><span class="n">arguments</span><span class="p">],</span><span class="w"> </span><span class="n">LOG_NAME</span>
<span class="w">	</span><span class="p">)</span>
<span class="w">	</span><span class="c1"># For unknown reasons the output only displays a single &quot;[&quot; - so only the executed arguments are logged.</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">_exit_code_split_pck</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="nb">OS</span><span class="o">.</span><span class="nf">execute</span><span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="vi">pck_explorer</span><span class="p">,</span><span class="w"> </span><span class="n">arguments</span><span class="p">)</span>


<span class="c1"># Removes the temp files</span>
<span class="k">func</span><span class="w"> </span><span class="nf">clean_up</span><span class="p">()</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb nb-Type">void</span><span class="p">:</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span><span class="s2">&quot;Start clean up&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="nb">DirAccess</span><span class="o">.</span><span class="nf">remove_absolute</span><span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="vi">temp_project_binary_path</span><span class="p">)</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span><span class="s1">&#39;Removed: &quot;</span><span class="si">%s</span><span class="s1">&quot;&#39;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">path</span><span class="o">.</span><span class="vi">temp_project_binary_path</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="nb">DirAccess</span><span class="o">.</span><span class="nf">remove_absolute</span><span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="vi">temp_global_script_class_cache_path</span><span class="p">)</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span><span class="s1">&#39;Removed: &quot;</span><span class="si">%s</span><span class="s1">&quot;&#39;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">path</span><span class="o">.</span><span class="vi">temp_global_script_class_cache_path</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="nb">DirAccess</span><span class="o">.</span><span class="nf">remove_absolute</span><span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="vi">temp_dir_path</span><span class="o">.</span><span class="nf">path_join</span><span class="p">(</span><span class="s2">&quot;.godot&quot;</span><span class="p">))</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span><span class="s1">&#39;Removed: &quot;</span><span class="si">%s</span><span class="s1">&quot;&#39;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">path</span><span class="o">.</span><span class="vi">temp_dir_path</span><span class="o">.</span><span class="nf">path_join</span><span class="p">(</span><span class="s2">&quot;.godot&quot;</span><span class="p">),</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="nb">DirAccess</span><span class="o">.</span><span class="nf">remove_absolute</span><span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="vi">temp_dir_path</span><span class="p">)</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span><span class="s1">&#39;Removed: &quot;</span><span class="si">%s</span><span class="s1">&quot;&#39;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">path</span><span class="o">.</span><span class="vi">temp_dir_path</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span><span class="s2">&quot;Clean up completed&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>


<span class="c1"># Initialize the path and file_name dictionary</span>
<span class="k">func</span><span class="w"> </span><span class="nf">setup_file_data</span><span class="p">()</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb nb-Type">void</span><span class="p">:</span>
<span class="w">	</span><span class="c1"># C:/path/to/game/game.exe</span>
<span class="w">	</span><span class="n">path</span><span class="o">.</span><span class="vi">exe</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">OS</span><span class="o">.</span><span class="nf">get_executable_path</span><span class="p">()</span>
<span class="w">	</span><span class="c1"># C:/path/to/game/</span>
<span class="w">	</span><span class="n">path</span><span class="o">.</span><span class="vi">game_base_dir</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nc">ModLoaderSetupUtils</span><span class="o">.</span><span class="nf">get_local_folder_dir</span><span class="p">()</span>
<span class="w">	</span><span class="c1"># C:/path/to/game/addons/mod_loader</span>
<span class="w">	</span><span class="n">path</span><span class="o">.</span><span class="vi">mod_loader_dir</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">path</span><span class="o">.</span><span class="vi">game_base_dir</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s2">&quot;addons/mod_loader/&quot;</span>
<span class="w">	</span><span class="n">path</span><span class="o">.</span><span class="vi">pck_explorer</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span>
<span class="w">		</span><span class="n">path</span><span class="o">.</span><span class="vi">mod_loader_dir</span>
<span class="w">		</span><span class="o">+</span><span class="w"> </span><span class="nf">get_pck_explorer_path</span><span class="p">()</span>
<span class="w">	</span><span class="p">)</span>
<span class="w">	</span><span class="c1"># ! pck explorer doesn&#39;t like trailing `/` in a path !</span>
<span class="w">	</span><span class="n">path</span><span class="o">.</span><span class="vi">temp_dir_path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">path</span><span class="o">.</span><span class="vi">mod_loader_dir</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s2">&quot;setup/temp&quot;</span>
<span class="w">	</span><span class="n">path</span><span class="o">.</span><span class="vi">temp_project_binary_path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">path</span><span class="o">.</span><span class="vi">temp_dir_path</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s2">&quot;/project.binary&quot;</span>
<span class="w">	</span><span class="n">path</span><span class="o">.</span><span class="vi">temp_global_script_class_cache_path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span>
<span class="w">		</span><span class="n">path</span><span class="o">.</span><span class="vi">temp_dir_path</span>
<span class="w">		</span><span class="o">+</span><span class="w"> </span><span class="s2">&quot;/.godot/global_script_class_cache.cfg&quot;</span>
<span class="w">	</span><span class="p">)</span>
<span class="w">	</span><span class="c1"># can be supplied to override the exe_name</span>
<span class="w">	</span><span class="n">file_name</span><span class="o">.</span><span class="vi">cli_arg_exe</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nc">ModLoaderSetupUtils</span><span class="o">.</span><span class="nf">get_cmd_line_arg_value</span><span class="p">(</span><span class="s2">&quot;--exe-name&quot;</span><span class="p">)</span>
<span class="w">	</span><span class="c1"># can be supplied to override the pck_name</span>
<span class="w">	</span><span class="n">file_name</span><span class="o">.</span><span class="vi">cli_arg_pck</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nc">ModLoaderSetupUtils</span><span class="o">.</span><span class="nf">get_cmd_line_arg_value</span><span class="p">(</span><span class="s2">&quot;--pck-name&quot;</span><span class="p">)</span>
<span class="w">	</span><span class="c1"># game - or use the value of cli_arg_exe_name if there is one</span>
<span class="w">	</span><span class="n">file_name</span><span class="o">.</span><span class="vi">exe</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span>
<span class="w">		</span><span class="nc">ModLoaderSetupUtils</span><span class="o">.</span><span class="nf">get_file_name_from_path</span><span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="vi">exe</span><span class="p">,</span><span class="w"> </span><span class="l">false</span><span class="p">,</span><span class="w"> </span><span class="l">true</span><span class="p">)</span>
<span class="w">		</span><span class="k k-ControlFlow">if</span><span class="w"> </span><span class="n">file_name</span><span class="o">.</span><span class="vi">cli_arg_exe</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="w">		</span><span class="k k-ControlFlow">else</span><span class="w"> </span><span class="n">file_name</span><span class="o">.</span><span class="vi">cli_arg_exe</span>
<span class="w">	</span><span class="p">)</span>
<span class="w">	</span><span class="c1"># game - or use the value of cli_arg_pck_name if there is one</span>
<span class="w">	</span><span class="c1"># using exe_path.get_file() instead of exe_name</span>
<span class="w">	</span><span class="c1"># so you don&#39;t override the pck_name with the --exe-name cli arg</span>
<span class="w">	</span><span class="c1"># the main pack name is the same as the .exe name</span>
<span class="w">	</span><span class="c1"># if --main-pack cli arg is not set</span>
<span class="w">	</span><span class="n">file_name</span><span class="o">.</span><span class="vi">pck</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span>
<span class="w">		</span><span class="nc">ModLoaderSetupUtils</span><span class="o">.</span><span class="nf">get_file_name_from_path</span><span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="vi">exe</span><span class="p">,</span><span class="w"> </span><span class="l">false</span><span class="p">,</span><span class="w"> </span><span class="l">true</span><span class="p">)</span>
<span class="w">		</span><span class="k k-ControlFlow">if</span><span class="w"> </span><span class="n">file_name</span><span class="o">.</span><span class="vi">cli_arg_pck</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="w">		</span><span class="k k-ControlFlow">else</span><span class="w"> </span><span class="n">file_name</span><span class="o">.</span><span class="vi">cli_arg_pck</span>
<span class="w">	</span><span class="p">)</span>
<span class="w">	</span><span class="c1"># C:/path/to/game/game.pck</span>
<span class="w">	</span><span class="n">path</span><span class="o">.</span><span class="vi">pck</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">path</span><span class="o">.</span><span class="vi">game_base_dir</span><span class="o">.</span><span class="nf">path_join</span><span class="p">(</span><span class="n">file_name</span><span class="o">.</span><span class="vi">pck</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s2">&quot;.pck&quot;</span><span class="p">)</span>

<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug_json_print</span><span class="p">(</span><span class="s2">&quot;path: &quot;</span><span class="p">,</span><span class="w"> </span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">debug_json_print</span><span class="p">(</span><span class="s2">&quot;file_name: &quot;</span><span class="p">,</span><span class="w"> </span><span class="n">file_name</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>


<span class="k">func</span><span class="w"> </span><span class="nf">make_project_data_public</span><span class="p">()</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb nb-Type">void</span><span class="p">:</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">info</span><span class="p">(</span><span class="s2">&quot;Register Global Classes&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="nb">ProjectSettings</span><span class="o">.</span><span class="nf">set_setting</span><span class="p">(</span><span class="s2">&quot;application/config/use_hidden_project_data_directory&quot;</span><span class="p">,</span><span class="w"> </span><span class="l">false</span><span class="p">)</span>

<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">godot_files</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nc">ModLoaderSetupUtils</span><span class="o">.</span><span class="nf">get_flat_view_dict</span><span class="p">(</span><span class="s2">&quot;res://.godot&quot;</span><span class="p">)</span>

<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">info</span><span class="p">(</span><span class="s1">&#39;Copying all files from &quot;res://.godot&quot; to &quot;res://godot&quot;.&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>

<span class="w">	</span><span class="k k-ControlFlow">for</span><span class="w"> </span><span class="n">file</span><span class="w"> </span><span class="ow">in</span><span class="w"> </span><span class="n">godot_files</span><span class="p">:</span>
<span class="w">		</span><span class="nc">ModLoaderSetupUtils</span><span class="o">.</span><span class="nf">copy_file</span><span class="p">(</span>
<span class="w">			</span><span class="n">file</span><span class="p">,</span><span class="w"> </span><span class="n">file</span><span class="o">.</span><span class="nf">trim_prefix</span><span class="p">(</span><span class="s2">&quot;res://.godot&quot;</span><span class="p">)</span><span class="o">.</span><span class="nf">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="s2">&quot;res://godot&quot;</span><span class="p">)</span>
<span class="w">		</span><span class="p">)</span>


<span class="k">func</span><span class="w"> </span><span class="nf">get_combined_global_script_class_cache</span><span class="p">()</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb">ConfigFile</span><span class="p">:</span>
<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">info</span><span class="p">(</span><span class="s2">&quot;Load mod loader class cache&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">global_script_class_cache_mod_loader</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="nb">ConfigFile</span><span class="o">.</span><span class="nf">new</span><span class="p">()</span>
<span class="w">	</span><span class="n">global_script_class_cache_mod_loader</span><span class="o">.</span><span class="nf">load</span><span class="p">(</span>
<span class="w">		</span><span class="s2">&quot;res://addons/mod_loader/setup/global_script_class_cache_mod_loader.cfg&quot;</span>
<span class="w">	</span><span class="p">)</span>

<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">info</span><span class="p">(</span><span class="s2">&quot;Load game class cache&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">global_script_class_cache_game</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="nb">ConfigFile</span><span class="o">.</span><span class="nf">new</span><span class="p">()</span>
<span class="w">	</span><span class="n">global_script_class_cache_game</span><span class="o">.</span><span class="nf">load</span><span class="p">(</span><span class="s2">&quot;res://.godot/global_script_class_cache.cfg&quot;</span><span class="p">)</span>

<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">info</span><span class="p">(</span><span class="s2">&quot;Create new class cache&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">global_classes_mod_loader</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="n">global_script_class_cache_mod_loader</span><span class="o">.</span><span class="nf">get_value</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="w"> </span><span class="s2">&quot;list&quot;</span><span class="p">)</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">global_classes_game</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="n">global_script_class_cache_game</span><span class="o">.</span><span class="nf">get_value</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="w"> </span><span class="s2">&quot;list&quot;</span><span class="p">)</span>

<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">info</span><span class="p">(</span><span class="s2">&quot;Combine class cache&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">global_classes_combined</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="p">[]</span>
<span class="w">	</span><span class="n">global_classes_combined</span><span class="o">.</span><span class="nf">append_array</span><span class="p">(</span><span class="n">global_classes_mod_loader</span><span class="p">)</span>
<span class="w">	</span><span class="n">global_classes_combined</span><span class="o">.</span><span class="nf">append_array</span><span class="p">(</span><span class="n">global_classes_game</span><span class="p">)</span>

<span class="w">	</span><span class="nc">ModLoaderSetupLog</span><span class="o">.</span><span class="nf">info</span><span class="p">(</span><span class="s2">&quot;Save combined class cache&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">LOG_NAME</span><span class="p">)</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">global_script_class_cache_combined</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="nb">ConfigFile</span><span class="o">.</span><span class="nf">new</span><span class="p">()</span>
<span class="w">	</span><span class="n">global_script_class_cache_combined</span><span class="o">.</span><span class="nf">set_value</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="w"> </span><span class="s2">&quot;list&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">global_classes_combined</span><span class="p">)</span>

<span class="w">	</span><span class="k k-ControlFlow">return</span><span class="w"> </span><span class="n">global_script_class_cache_combined</span>


<span class="k">func</span><span class="w"> </span><span class="nf">get_pck_explorer_path</span><span class="p">()</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb nb-Type">String</span><span class="p">:</span>
<span class="w">	</span><span class="k">var</span><span class="w"> </span><span class="n">pck_explorer_path</span><span class="w"> </span><span class="p">:</span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;vendor/GodotPCKExplorer/GodotPCKExplorer.Console&quot;</span>

<span class="w">	</span><span class="k k-ControlFlow">if</span><span class="w"> </span><span class="nb">OS</span><span class="o">.</span><span class="nf">get_name</span><span class="p">()</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&quot;Windows&quot;</span><span class="p">:</span>
<span class="w">		</span><span class="k k-ControlFlow">return</span><span class="w"> </span><span class="s2">&quot;</span><span class="si">%s</span><span class="s2">.exe&quot;</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="n">pck_explorer_path</span>

<span class="w">	</span><span class="k k-ControlFlow">return</span><span class="w"> </span><span class="n">pck_explorer_path</span>


<span class="k">func</span><span class="w"> </span><span class="nf">restart</span><span class="p">()</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="nb nb-Type">void</span><span class="p">:</span>
<span class="w">	</span><span class="nb">OS</span><span class="o">.</span><span class="nf">set_restart_on_exit</span><span class="p">(</span><span class="l">true</span><span class="p">)</span>
<span class="w">	</span><span class="nf">quit</span><span class="p">()</span>
</pre></div></td></tr></table></div>
</body>
</html>
